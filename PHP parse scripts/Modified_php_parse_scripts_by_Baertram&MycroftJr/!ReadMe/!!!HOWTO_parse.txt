Howoto - Build IntelliJ autocomplete and function documentation via PHP parser scripts. All rights go to user @reaby!
=====================================================================================================================
1. Copy the file ESOUIDocumentationPXX.txt to the folder. You will be able to receive the actual API version's file here:
https://wiki.esoui.com/APIVersion
-> Click on APIversion and check the entry "API TXT Documentation"
Important: The filename ESOUIDocumentationPxx.txt needs to be renamed to ESOUIDocumentation.txt afterwards in order to let the php parser scripts find the file!

2. The php scripts (filenames *.php) in folder /parser_scripts/ need to be executed via a php command promt (!!!php.exe file needs to be v8.0+!!!).
   Each .php file will create a "eso-api_*.lua" file, or a "GuiXml.json" file for the XML stuff in the /_out/, /_out/XML/ folders -> See step 4 for the XML json file.

   You can use the .bat batch file "1_parse_ESOUIDocumentation.bat" to run all scipts after another.
   Read the text in the command line output for further instructions!

   The created lua files will be located in the /_out/ folder afterwards, and the json file in the /_out/XML/ folder.

   [Attention]
   Maybe not needed any longer as the PHP scripts should take care of it meanwhile. But to make sure:
   After creating the file "eso-api_game.lua" open it with IntelliJ and use the following search & replace (with regula expressions enabled!) patterns to move
   *private* and *protected* string from inside the function definition behind the end, as a comment --private/--protected:

   a) Search for with regex enabled, case insensitive!
   function (.*) (\*private\*){1} (.*) end
   a) Replace with:
   function $1$3 end --$2

   b) Search for with regex enabled, case insensitive!
   function (.*) (\*protected\*){1} (.*) end
   b) Replace with:
   function $1$3 end --$2

3. Also read file /DumpVars/HowToDumpVars.txt! The created file "_out/_noRelease/DumpVars_constants.lua" and the whole DumpVars folder needs to be copied
   to your live/AddOns/ folder.
	->This can be done via the bat file "2_deploy_DumpVars.bat" (for PTS use 2_deploy_DumpVars_PTS.bat")

   If the bat file does not work or you want to manually do this, here is the description how:
   DumpVars is an ESO addon which will dump the constant names + their values defined in the file "_out/_noRelease/DumpVars_constants.lua" to the SavedVariables folder of ESO.
   So put this directory DumpVars in total into your AddOns directory of the PTS/live server and copy the file /_out/_noRelease/DumpVars_constants.lua to that /AddOns/DumpVars folder too.
   Afterwards run the ESO game, activate ONLY the "DumpVars" addon (so no other addon may overwrite the global values!) and use the slash command /dumpvars ingame.
   A reloadui will be autmatically done after the variables were dumped and that will write the SavedVariables file.
   The dumped variables will be inside the folder /SavedVariables, filename "DumpVars.lua" afterwards.

   Afterwards run the bat file "3_finish_ESOUIDocumentation.bat"  (for PTS use 3_finish_ESOUIDocumentation_PTS.bat") to copy the live/SavedVariables/DumpVars.lua file
   to _out/_noRelease/DumpVars_SV.lua, and then it start the php script in /parser_scripts/global_api.php
   Or do that manually:    Copy that file back to /_out/_noRelease/DumpVars_SV.lua (Attention: Add that "_SV" suffix) to the name. And then run php.exe /parser_scripts/global_api.php


   Or if you want to fully manually parse the SavedVariables file:
   You can take them from there and add them to another .lua file for IntelliJ, e.g. "/_out/eso-api_globals.lua"
   You need to remove the table structure around the savedvars data and just put constant = value into a lua file!
   If you wish to you can split the contents of the DumpVars savedvards into 2 files so the ["sounds"] will get into an own file, e.g. "/_out/eso-api_new_sounds.lua"
   Remove the [" and "] around the constant names (globals and sounds), and remove the , character at the line end!
   Hint: Do not add that ["version"] = 0.00001 number to the sounds by accident!
   You may sort the files afterwards online via e.g. https://www.online-utility.org/text/sort.jsp so the constants are sorted alphabetically!


4. Edit the file "_release/XML/index.html", search for "for ESOUI APIVersion" and replace the APIversion number behind the text with the actual APIVersion number -> Can be obtained ingame via /script d(GetAPIVersion())

5. DO NOT DELETE THE FILE: manual_update/eso-api_base_Manual_NonGenerated.lua
   It will NOT be generated by the parsing scripts. You manually need to check ESOUI source code and change the file if any variables changed/were added for the API version.

6. DO NOT DELETE THE FILE : manual_update/eso-api_sounds.lua
   It will NOT be generated by the parsing scripts. You manually need to change it based on vanilla esoui code's sound IDs list which can be found here
   (check the the updated most current APIVersion!):  /esoui/libraries/globals/soundids.lua
    e.g. https://github.com/esoui/esoui/blob/live/esoui/libraries/globals/soundids.lua

7. Either use the bat file "4_buildRelease.bat".
   Or do it manually:
   Put the files of folder /_out/ in the folder /_release/.
   Attention: Do not copy the files from the folder "_noRelease"!
   Put the files of folder /_out/XML/ in the folder /_release/XML/.
   Put the files of folder /manual_update/ in the folder /_release/.

8. Copy the files of folder "_release" Into your IntelliJ IDE project path for the "lua" (EmmyLua e.g.) projects or into the SDK folder you created for your live/PTS installations.
   Choose IntelliJ menu "File" -> "Invalidate cache and restart".
   Restart IntelliJ.
   Your addons should now have the auto completion function with CTRL+space and CTRL+leftclick search etc.