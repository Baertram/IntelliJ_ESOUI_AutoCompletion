Howoto - Build IntelliJ autocomplete and function documentation via PHP parser scripts. All rights go to user @reaby!
=====================================================================================================================
1. The filename ESOUIDocumentationPxx.txt needs to be renamed to ESOUIDocumentation.txt!

2. The php scripts (filenames *.php) need to be executed via a php command promt (php.exe file).
   Each .php file will create a .lua file, or a .json file for the XML stuff
   Attention: After creating the file "eso-api_game.lua" open it with IntelliJ and use the following search & replace (with regula expressions enabled!) patterns to move
   *private* and *protected* string from inside the function definition behind the end, as a comment --private/--protected:

   a) Search for with regex enabled, case insensitive!
   function (.*) (\*private\*){1} (.*) end
   a) Replace with:
   function $1$3 end --$2

   b) Search for with regex enabled, case insensitive!
   function (.*) (\*protected\*){1} (.*) end
   b) Replace with:
   function $1$3 end --$2

3. The created file "DumpVars_constants.lua" needs to be put into the subdir DumpVars.
   This is an ESO addon which will dump the constant names + their values defined in the file "DumpVars_constants.lua" to the savedvars of ESO.
   So put this directory in total into your AddOns directory of the PTS/live server and run the game, activate the "DumpVars" addon and use the slash command /dumpvars ingame.
   A reloadui will be autmatically done after the variables were dumped.
   The dumped variables will be inside the folder SavedVariables, filename "DumpVars.lua" afterwards.
   You can take them from there and add them to another .lua file for IntelliJ, e.g. "eso-api_globals.lua"
   You need to remove the table structure around the savedvars data and just put constant = value into a lua file!
   If you wish to you can split the contents of the DumpVars savedvards into 2 files so the ["sounds"] will get into an own file, e.g. "eso_api_sounds.lua"
   Remove the [" and "] around the constant names (globals and sounds), and remove the , character at the line end!
   You may sort the files afterwards online via e.g. https://www.online-utility.org/text/sort.jsp so the constants are sorted alphabetically!

4. Put the file "GuiXml.json" into the subfolder XML.
   Edit the file "GuiXml.js" and copy the contents of the file "GuiXml.json" into the "GuiXml.js" file like described inside the GuiXML.js file.
   Edit the file "index.html", search for "for ESOUI APIVersion" and replace the APIversion number behind the text with the actual APIVersion number -> Can be obtained ingame via /script d(GetAPIVersion())

5. Attention: The parse files do NOT extract the EVENTS from the ESOUIDocumentation.txt file. You need to manually copy them to the file
   "eso-api_events.lua" and format them via regex e.g. to a lua format which IntelliJ can read then!
   Like replace beginning *, *integer*, *string*, *bool*, *luaindex*, *luaindex:nilable*, *id64*, *number*,  with nothing.
   And regex \*\[(.)*\]\* with nothing to remove the *[ ... ]* stuff.
   Then replace the ( with = function (, and afterwards replace the ) with ) end.
   Now there are some events which got no parameters and will just have 1 row starting with EVENT_.... Add the = function() end to them too.
   You may do this by replacing \n with "= function() end". Then replace "end = function() end" with "end" for the lines where it was double now.
   Be sure to do it case sensitive (lower case "end"!) or you will replace the END of e.g. EVENT_CHATTER_END = function() end also!!!
   You may sort the file afterwards online via e.g. https://www.online-utility.org/text/sort.jsp so the events are sorted alphabetically!

6. Put the .lua files into your IntelliJ IDE project path for the "lua" (EmmyLua e.g.) projects.
   Choose IntelliJ menu "File" -> "Invalidate cache and restart".
   Restart IntelliJ.
   Your addons should now have the auto completion function with CTRL+space and CTRL+leftclick search etc.
